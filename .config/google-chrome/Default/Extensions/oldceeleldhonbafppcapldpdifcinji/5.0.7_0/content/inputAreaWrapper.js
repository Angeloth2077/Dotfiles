/*! (C) Copyright 2020 LanguageTooler GmbH. All rights reserved. */
class InputAreaWrapper{constructor(t,e,n=Number.MAX_SAFE_INTEGER){this._lastKey=null,this._inputArea=t,this._tweaks=e,this._textLengthThreshold=n,this._onBlur=this._onBlur.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this._onPaste=this._onPaste.bind(this),this._onInput=this._onInput.bind(this),this._inputArea.addEventListener("blur",this._onBlur),this._inputArea.addEventListener("keyup",this._onKeyUp),this._inputArea.addEventListener("paste",this._onPaste)}_onBlur(){const t={inputAreaWrapper:this};dispatchCustomEvent(document,InputAreaWrapper.eventNames.blur,t)}_onKeyUp(t){if(Math.random()>.01)return;const e=BrowserDetector.getOS();if("ArrowDown"===t.key&&t.altKey&&!t.shiftKey&&!t.metaKey&&!t.ctrlKey)return void Tracker.trackEvent("Stat",`key:${e}:alt_arrow_down`);if("ArrowDown"===t.key&&t.altKey&&t.ctrlKey&&!t.shiftKey&&!t.metaKey)return void Tracker.trackEvent("Stat",`key:${e}:alt_ctrl_arrow_down`);if("ArrowDown"===t.key&&t.shiftKey&&t.altKey&&!t.ctrlKey&&!t.metaKey)return void Tracker.trackEvent("Stat",`key:${e}:shift_alt_arrow_down`);if("Shift"===t.key&&t.ctrlKey&&!t.ctrlKey&&!t.metaKey)return void Tracker.trackEvent("Stat",`key:${e}:ctrl_shift`);if("Alt"===t.key&&t.ctrlKey&&!t.shiftKey&&!t.metaKey)return void Tracker.trackEvent("Stat",`key:${e}:alt_control`);let n=null;if("Control"!==t.key||t.altKey||t.shiftKey||t.metaKey?"Alt"!==t.key||t.ctrlKey||t.shiftKey||t.metaKey||(n="alt"):n="ctrl",!n)return void(this._lastKey=null);const r=Date.now();this._lastKey?r-this._lastKey.timestamp>400||this._lastKey.key!==n?this._lastKey={key:n,timestamp:r}:Tracker.trackEvent("Stat",`key:${e}:double_${n}`):this._lastKey={key:n,timestamp:r}}_onPaste(t){const e=t.clipboardData,n={inputAreaWrapper:this,isSignificantTextChange:(e?e.getData("Text"):"").length>200};dispatchCustomEvent(document,InputAreaWrapper.eventNames.paste,n)}_onInput(){const t=this._text;if(!this._updateText())return;const e={inputAreaWrapper:this,previousText:t,text:this._text};dispatchCustomEvent(document,InputAreaWrapper.eventNames.textChanged,e)}_getTextChunkIndex(t){let e=0,n=this._textChunks.length,r=0;for(;e<n;){r=e+Math.floor((n-e)/2);const s=this._textChunks[e];if(s.parsedTextOffset<=t&&t<=s.parsedTextOffset+s.parsedText.length)return e;const a=this._textChunks[r];a.parsedTextOffset+a.parsedText.length>=t?n=r:e=r+1}return e<this._textChunks.length?e:-1}simulateKeyUp(){try{const t=new window.KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,keyCode:17,which:17,charCode:0,location:1,key:"Control",code:"ControlLeft"});this._inputArea.dispatchEvent(t)}catch(t){}}simulateInput(t=""){const e=new window.InputEvent("input",{bubbles:!0,cancelable:!1,inputType:"insertText",data:t});this._inputArea.dispatchEvent(e)}simulateChange(){const t=new Event("change",{bubbles:!0,cancelable:!1});this._inputArea.dispatchEvent(t)}getText(){return this._text}getTextRanges(t,e,n=!0){if(t<0)return[];const r=this._getTextChunkIndex(t);if(-1===r)return[];const s=[];for(let a=r;a<this._textChunks.length;a++){const{node:r,isTextNode:i,rawText:h,parsedText:o,parsedTextOffset:p}=this._textChunks[a],l=Math.max(t-p,0);if(!i){e-=o.length-l;continue}const u=this._offsetInRawText(h,o,l),c=this._offsetInRawText(h,o,l+e);if((!n||u!==c)&&(s.push({node:r,start:u,end:c}),(e-=o.length-l)<=0))break}return s}destroy(){this._inputArea.removeEventListener("blur",this._onBlur),this._inputArea.removeEventListener("keyup",this._onKeyUp),this._inputArea.removeEventListener("paste",this._onPaste)}}InputAreaWrapper.eventNames={textChanged:"lt-inputAreaWrapper.textChanged",scroll:"lt-inputAreaWrapper.scroll",paste:"lt-inputAreaWrapper.paste",blur:"lt-inputAreaWrapper.blur",dblclick:"lt-inputAreaWrapper.dblclick"};
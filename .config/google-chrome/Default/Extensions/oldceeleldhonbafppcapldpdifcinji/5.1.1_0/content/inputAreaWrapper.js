/*! (C) Copyright 2020 LanguageTooler GmbH. All rights reserved. */
class InputAreaWrapper{constructor(t,e,n=Number.MAX_SAFE_INTEGER){this._inputArea=t,this._tweaks=e,this._textLengthThreshold=n,this._lastControlPressTimeStamp=0,this._onBlur=this._onBlur.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this._onPaste=this._onPaste.bind(this),this._onInput=this._onInput.bind(this),this._inputArea.addEventListener("blur",this._onBlur),this._inputArea.addEventListener("keyup",this._onKeyUp),this._inputArea.addEventListener("paste",this._onPaste)}_onBlur(){const t={inputAreaWrapper:this};dispatchCustomEvent(document,InputAreaWrapper.eventNames.blur,t)}_onKeyUp(t){const e=Date.now();if("Control"!==t.key||t.altKey||t.shiftKey||t.metaKey)this._lastControlPressTimeStamp=0;else{if(e-this._lastControlPressTimeStamp<400){const t={inputAreaWrapper:this};dispatchCustomEvent(document,InputAreaWrapper.eventNames.dblCtrlPress,t)}this._lastControlPressTimeStamp=e}}_onPaste(t){const e=t.clipboardData,n={inputAreaWrapper:this,isSignificantTextChange:(e?e.getData("Text"):"").length>200};dispatchCustomEvent(document,InputAreaWrapper.eventNames.paste,n)}_onInput(){const t=this._text;if(!this._updateText())return;const e={inputAreaWrapper:this,previousText:t,text:this._text};dispatchCustomEvent(document,InputAreaWrapper.eventNames.textChanged,e)}_getTextChunkIndex(t){let e=0,n=this._textChunks.length,s=0;for(;e<n;){s=e+Math.floor((n-e)/2);const r=this._textChunks[e];if(r.parsedTextOffset<=t&&t<=r.parsedTextOffset+r.parsedText.length)return e;const a=this._textChunks[s];a.parsedTextOffset+a.parsedText.length>=t?n=s:e=s+1}return e<this._textChunks.length?e:-1}simulateKeyUp(){try{const t=new window.KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,keyCode:17,which:17,charCode:0,location:1,key:"Control",code:"ControlLeft"});this._inputArea.dispatchEvent(t)}catch(t){}}simulateInput(t=""){const e=new window.InputEvent("input",{bubbles:!0,cancelable:!1,inputType:"insertText",data:t});this._inputArea.dispatchEvent(e)}simulateChange(){const t=new Event("change",{bubbles:!0,cancelable:!1});this._inputArea.dispatchEvent(t)}getText(){return this._text}getTextRanges(t,e,n=!0){if(t<0)return[];const s=this._getTextChunkIndex(t);if(-1===s)return[];const r=[];for(let a=s;a<this._textChunks.length;a++){const{node:s,isTextNode:i,rawText:p,parsedText:h,parsedTextOffset:o}=this._textChunks[a],u=Math.max(t-o,0);if(!i){e-=h.length-u;continue}const l=this._offsetInRawText(p,h,u),d=this._offsetInRawText(p,h,u+e);if((!n||l!==d)&&(r.push({node:s,start:l,end:d}),(e-=h.length-u)<=0))break}return r}destroy(){this._inputArea.removeEventListener("blur",this._onBlur),this._inputArea.removeEventListener("keyup",this._onKeyUp),this._inputArea.removeEventListener("paste",this._onPaste)}}InputAreaWrapper.eventNames={blur:"lt-inputAreaWrapper.blur",scroll:"lt-inputAreaWrapper.scroll",paste:"lt-inputAreaWrapper.paste",textChanged:"lt-inputAreaWrapper.textChanged",dblclick:"lt-inputAreaWrapper.dblclick",dblCtrlPress:"lt-inputAreaWrapper.dblCtrlPress"};
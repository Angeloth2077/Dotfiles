/*! (C) Copyright 2020 LanguageTooler GmbH. All rights reserved. */
class StringMap{constructor(h,t=StringMap.DEFAULT_CHUNK_SIZE){this._length=h.length,this._chars=new Array(h.length);for(let t=0;t<h.length;t++)this._chars[t]=h[t];this._chunkSize=t,this._cachedChunks=new Array(Math.ceil(this._length/this._chunkSize)),fill(this._cachedChunks,""),this._value=h}_updateCachedChunks(){for(let h=0;h<this._cachedChunks.length;h++)if(""===this._cachedChunks[h]){const t=h*this._chunkSize,s=t+this._chunkSize;this._cachedChunks[h]=this._chars.slice(t,s).join("")}}get length(){return this._length}set(h,t){for(let s=0;s<h.length;s++)this._chars[t+s]=h[s];const s=Math.floor(t/this._chunkSize),i=Math.ceil((t+h.length)/this._chunkSize);fill(this._cachedChunks,"",s,i),this._value=null}fill(h,t=0,s=this._chars.length){fill(this._chars,h,t,s);const i=Math.floor(t/this._chunkSize),e=Math.ceil(s/this._chunkSize);fill(this._cachedChunks,"",i,e),this._value=null}charAt(h){return this._chars[h]}substring(h,t){return null===this._value?this._chars.slice(h,t).join(""):this._value.substring(h,t)}toString(){return null===this._value&&(this._updateCachedChunks(),this._value=this._cachedChunks.join("")),this._value}}StringMap.DEFAULT_CHUNK_SIZE=16,"undefined"!=typeof module&&(module.exports.StringMap=StringMap);
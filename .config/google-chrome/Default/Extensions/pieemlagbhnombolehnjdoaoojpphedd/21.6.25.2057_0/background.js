(()=>{"use strict";class e{constructor(e){this.storageName=e,this.changeListeners=new Set,this.storageName=e}async setup(e){await this.applyConfig(e),browser.storage.onChanged.addListener(((e,s)=>{if("sync"!==s||!e[this.storageName])return;const t=e[this.storageName].newValue;for(const e of this.changeListeners)e(t);this.cache=t}));for(const e of this.changeListeners)e(this.cache)}async getAll(){return(await browser.storage.sync.get(this.storageName))[this.storageName]}async setAll(e){await browser.storage.sync.set({[this.storageName]:e}),this.cache=e}onChange(e){this.changeListeners.add(e),this.cache&&e(this.cache)}async applyConfig(e){const s={...e.defaults,...await this.getAll()};for(const t of e.migrations)t(s,e.defaults);console.info("[RPV] Loaded settings:",s),await this.setAll(s)}}e.migrations={removeUnused(e,s){for(const t of Object.keys(e))t in s||delete e[t]}};const s=new e("settings");s.setup({defaults:{showSpoilers:"onHover",region:null,uid:null},migrations:[e.migrations.removeUnused,e=>{e.uid||(e.uid=Math.random().toString(36).substr(2,9))}]});const t=s;browser.runtime.onMessage.addListener((e=>{e.event&&async function(e){return void 0;const{region:s,uid:a}=await t.getAll();await fetch("",{method:"POST",body:JSON.stringify({...e,region:s,uid:a,version:n}),headers:new Headers({"content-type":"application/json"})})}(e.event)}));const n="21.6.25.2057"})();